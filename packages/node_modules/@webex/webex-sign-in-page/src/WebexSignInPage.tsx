import { ButtonPill } from "@momentum-ui/react-collaboration";
import React, { ReactElement } from "react";
import { useTranslation } from 'react-i18next';
import './WebexSignInPage.scss';


type IWebexSignInProps = {
  signInImage: ReactElement;
  signInTitle: string;
  signInMessage: string;
  signInButtonText: string;
  footNote: ReactElement;
  showSignInOrRetry: boolean;
  signInDifferentAccountText?: string;
  signInAction: (useDifferentAccount?: boolean) => void;
  signingIn: boolean;
  headerNoteStart?: string;
  headerNoteEnd?: string;
  email?: string;
  clientType : string;
};

export const WebexSignInPage = ({
  signInImage,
  signInTitle,
  signInMessage,
  signInButtonText,
  footNote,
  showSignInOrRetry,
  signInDifferentAccountText,
  signInAction,
  headerNoteStart,
  headerNoteEnd,
  email,
  signingIn,
  clientType
  }: IWebexSignInProps) => {
    const { t } = useTranslation('WebexSpeedDials');
    return (
      <div className={ `sign-in-page ${ clientType !== 'desktop' && clientType!== 'web' ? 'sign-in-page__mobile': '' }`}>
        {!signingIn && (
        <div className={`webex-message-container ${clientType!=='desktop' && clientType!=='web'? 'webex-message-container__mobile':''} ${ showSignInOrRetry ? `webex-message-container__error` : ''}`}>
          <div className="icon">
            { signInImage }
          </div>
          <div className="signInText">
            <p className="title">{signInTitle}</p>
            <p className="message">{signInMessage}</p>
            {headerNoteStart&& (
              <div className="header">{headerNoteStart} <b>{email}</b> {headerNoteEnd}</div>
            )}
          </div>
          <div className="close1">
            <ButtonPill onPress={() => signInAction(false)}>
              { signInButtonText }
            </ButtonPill>
            {signInDifferentAccountText && (
              <div className="close2">
              <ButtonPill onPress={() => signInAction(true)}>
                {signInDifferentAccountText}
              </ButtonPill>
              </div>
            )}
      </div>
          { footNote }
        </div>
        )}
        {signingIn && (
        <div>{t('signIn.signingIn')}</div>
        )}
      </div>
    );
  };



